//https://www.tradingview.com/script/iJV5Dqwm-Signal-Composer/
//@version=5
//#region PREAMBLE
// â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’
//  Copyright Â© 2022-2023 Iason Nikolas | jason5480
//  The "Signal Adaptor" script may be freely distributed under the MIT license.
//  
//  Permission is hereby granted, free of charge,
//  to any person obtaining a copy of this software and associated documentation files (the "Software"),
//  to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge,
//  publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
//  is furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in ALL COPIES or substantial portions of
//  the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
//  OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
//  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//  
//  Description
//  --------------------------------------------------------------------------------------------------------------------
//  This Signal Composer script can compose existing signals from other "Signal Indicators" and can forward it to the
//  "Template Trailing Strategy". It allows the user to combine the logic of two signals and define the conditions that
//  will trigger the start, end, cancel start and cancel end deals of the produced signal. A signal will be composed
//  from those user-defined conditions. For example, one signal indicator may have the main logic and the other one the
//  filter logic. If you want to combine more signals you may add two Signal Composer scripts and pipe the output of the
//  first composer to the second one. This is the 'main building block' of creating a bit more complex strategies
//  without writing any code. The "indicator on indicator" feature is needed so you can forward the resulted signal to
//  the "Template Trailing Strategy" so that you can set take profits, stop losses, custom alerts and all other nifty
//  features this framework provides. Thus, you should be Plus or Premium user to get its full potential.
//  It is very convenient for those who want to create a strategy without coding their own signal indicator and for those
//  who want to fast prototype various ideas based on simple but composable conditions. It can nicely be combined with
//  the "Signal Adapter" which combines simple (non-signal) indicators and produces a signal. This is a recipe to build
//  fast and backtest more complex strategy logic. This approach has a fail-fast mentality! Keep, in mind that you can
//  code a single signal indicator with your composed logic later on only if the idea turns out to be "good enough".
//  
//  --------------------------------------------------------------------------------------------------------------------
//  Disclaimer:
//    1. I am not licensed financial advisors or broker-dealer. I do not tell you when or what to buy or sell.
//       I developed this software which enables you execute manual or automated trades using TradingView.
//       The software allows you to set the criteria you want for entering and exiting trades.
//    2. Do not trade with money you cannot afford to lose.
//    3. I do not guarantee consistent profits or that anyone can make money with no effort.
//       And I am not selling the holy grail.
//    4. Every system can have winning and losing streaks.
//    5. Money management plays a large role in the results of your trading. For example: lot size, account size,
//       broker leverage, and broker margin call rules all affect on results. Also, your Take Profit and Stop Loss
//       settings for individual pair trades and for overall account equity have a major impact on results.
//       If you are new to trading and do not understand these items, then I recommend you seek educational materials
//       to further your knowledge.
//    
//  YOU NEED TO FIND AND USE THE TRADING SYSTEM THAT WORKS BEST FOR YOU AND YOUR TRADING TOLERANCE.
//  I HAVE PROVIDED NOTHING MORE THAN A TOOL WITH OPTIONS FOR YOU TO TRADE WITH THIS PROGRAM ON TRADINGVIEW.
//  
//  I accept suggestions to improve the script.
//  If you encounter any problems I will be happy to share with me.
//  --------------------------------------------------------------------------------------------------------------------
//#endregion ===========================================================================================================
//#region SETUP
// â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’
indicator(title = 'Signal Composer',
          shorttitle = 'SC',
          overlay = true)

import jason5480/tts_convention/1 as conv

//#endregion ===========================================================================================================
//#region ðŸ”Œ Signal
// â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’

// INPUT ===============================================================================================================
string TT_EXTERNAL_INPUT_INFO = ' INFORMATION! The indicator should be added to the same chart with this strategy and the desired value that will take part in the conditions below should be plotted in the chart.'
signal1 = int(input.source(defval = close, title = 'ðŸ”ŒSignal1 ðŸ›ˆâž¡', tooltip = 'Select the first signal from a signal indicator.' + TT_EXTERNAL_INPUT_INFO, group = 'Signals'))
signal2 = int(input.source(defval = close, title = 'ðŸ”ŒSignal2 ðŸ›ˆâž¡', tooltip = 'Select the second signal from a signal indicator.' + TT_EXTERNAL_INPUT_INFO, group = 'Signals'))

startLongDealOperator = input.string(defval = 'all', title = 'Start Long Deal whenâ€ƒâ€ƒ', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to start a Long Deal based on signals.', group = 'Conditions')
startShortDealOperator = input.string(defval = 'all', title = 'Start Short Deal whenâ€ƒâ€ƒ', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to start a Short Deal based on signals.', group = 'Conditions')

endLongDealOperator = input.string(defval = 'all', title = 'End Long Deal whenâ€ƒâ€ƒâ€ƒ', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to end a Long Deal based on signals.', group = 'Conditions')
endShortDealOperator = input.string(defval = 'all', title = 'End Short Deal whenâ€ƒâ€ƒ', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to end a Short Deal based on signals.', group = 'Conditions')

cnlStartLongDealOperator = input.string(defval = 'any', title = 'Cnl Start Deal Long when', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to cancel the start Long Deal based on signals.', group = 'Conditions')
cnlStartShortDealOperator = input.string(defval = 'any', title = 'Cnl Start Short Deal when', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to cancel the start Short Deal based on signals.', group = 'Conditions')

cnlEndLongDealOperator = input.string(defval = 'any', title = 'Cnl End Long Deal whenâ€ƒ', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to cancel the end Long Deal based on signals.', group = 'Conditions')
cnlEndShortDealOperator = input.string(defval = 'any', title = 'Cnl End Short Deal whenâ€ƒ', options = ['all', 'any', 'onlyOne', 'Signal1', 'Signal2', 'always', 'never'], tooltip = 'Condition to cancel the end Short Deal based on signals.', group = 'Conditions')

// LOGIC ===============================================================================================================
getCond(bool var1, simple string op, bool var2) =>
    switch op
        'all' => var1 and var2
        'any' => var1 or var2
        'onlyOne' => (var1 and not var2) or (var2 and not var1)
        'Signal1' => var1
        'Signal2' => var2
        'always' => true
        'never' => false
        => na

// Get the start, end, cancel start and cancel end deal conditions by decomposing the two signals
dealConditions1 = conv.getDealConditions(signal1)
dealConditions2 = conv.getDealConditions(signal2)

// Calculate the start, end, cancel start, cancel end conditions according to the user-defined composite logic
dealConditions = conv.DealConditions.new(
  startLongDeal = getCond(dealConditions1.startLongDeal, startLongDealOperator, dealConditions2.startLongDeal),
  startShortDeal = getCond(dealConditions1.startShortDeal, startShortDealOperator, dealConditions2.startShortDeal),
  endLongDeal = getCond(dealConditions1.endLongDeal, endLongDealOperator, dealConditions2.endLongDeal),
  endShortDeal = getCond(dealConditions1.endShortDeal, endShortDealOperator, dealConditions2.endShortDeal),
  cnlStartLongDeal = getCond(dealConditions1.cnlStartLongDeal, cnlStartLongDealOperator, dealConditions2.cnlStartLongDeal),
  cnlStartShortDeal = getCond(dealConditions1.cnlStartShortDeal, cnlStartShortDealOperator, dealConditions2.cnlStartShortDeal),
  cnlEndLongDeal = getCond(dealConditions1.cnlEndLongDeal, cnlEndLongDealOperator, dealConditions2.cnlEndLongDeal),
  cnlEndShortDeal = getCond(dealConditions1.cnlEndShortDeal, cnlEndShortDealOperator, dealConditions2.cnlEndShortDeal))

// Use this output as an input signal in scripts like "Template Trailing Strategy" and "Signal Composer" that can utilize this value.
// Emit the current signal value (21, 20, 10, 0, 01, 02, 12, 40, 30, 04, 03) according to the "two channels mod div" convention.
plot(series = conv.getSignal(dealConditions), title = 'ðŸ”ŒSignal to TTS', color = color.olive, display = display.data_window + display.status_line)

// PLOT ================================================================================================================
plotshape(series = dealConditions.startLongDeal, title = 'Start Long', style = shape.triangleup, location = location.belowbar, color = color.new(#2962FF, 70), size = size.small, display = display.pane + display.data_window)
plotshape(series = dealConditions.startShortDeal, title = 'Start Short', style = shape.triangledown, location = location.abovebar, color = color.new(#FF1744, 70), size = size.small, display = display.pane + display.data_window)
plotshape(series = dealConditions.endLongDeal, title = 'End Long', style = shape.square, location = location.abovebar, color = color.new(#D500F9, 70), size = size.tiny, display = display.pane + display.data_window)
plotshape(series = dealConditions.endShortDeal, title = 'End Short', style = shape.square, location = location.belowbar, color = color.new(#D500F9, 70), size = size.tiny, display = display.pane + display.data_window)
plotshape(series = dealConditions.cnlStartLongDeal, title = 'Cancel Start Long', style = shape.xcross, location = location.abovebar, color = color.new(#3179F5, 70), size = size.tiny, display = display.pane + display.data_window)
plotshape(series = dealConditions.cnlStartShortDeal, title = 'Cancel Start Short', style = shape.xcross, location = location.belowbar, color = color.new(#F7525F, 70), size = size.tiny, display = display.pane + display.data_window)
plotshape(series = dealConditions.cnlEndLongDeal, title = 'Cancel End Long', style = shape.xcross, location = location.belowbar, color = color.new(#AB47BC, 70), size = size.tiny, display = display.pane + display.data_window)
plotshape(series = dealConditions.cnlEndShortDeal, title = 'Cancel End Short', style = shape.xcross, location = location.abovebar, color = color.new(#AB47BC, 70), size = size.tiny, display = display.pane + display.data_window)

//#endregion ===========================================================================================================
//#region ðŸ”” ALERT MESSAGES
// â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’

// LOGIC ===============================================================================================================
if (dealConditions.startLongDeal and barstate.isconfirmed)
    alert(message = 'Start Long')

if (dealConditions.startShortDeal and barstate.isconfirmed)
    alert(message = 'Start Short')

if (dealConditions.endLongDeal and barstate.isconfirmed)
    alert(message = 'End Long')

if (dealConditions.endShortDeal and barstate.isconfirmed)
    alert(message = 'End Short')

if (dealConditions.cnlStartLongDeal and barstate.isconfirmed)
    alert(message = 'Cancel Start Long')

if (dealConditions.cnlStartShortDeal and barstate.isconfirmed)
    alert(message = 'Cancel Start Short')

if (dealConditions.cnlEndLongDeal and barstate.isconfirmed)
    alert(message = 'Cancel End Long')

if (dealConditions.cnlEndShortDeal and barstate.isconfirmed)
    alert(message = 'Cancel End Short')

//#endregion ===========================================================================================================