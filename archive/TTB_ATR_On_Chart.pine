// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© dalozification

//@version=4
study("TTB ATR On Chart",overlay=true)

enablePercentageOnChart = input(title="Enable/Disable Showing RVOL % On Chart", type=input.bool, defval=true)

length = input(500, title="ATR Period", minval=1)
smoothing = input(title="Smoothing", defval="RMA", options=["RMA", "SMA", "EMA", "WMA"])
atrmultiplier = input(title="ATR Multiplier", type=input.float, defval=0.5, minval=.01, maxval=100, step=0.05)

ma_function(source, length) =>
	if smoothing == "RMA"
		rma(source, length)
	else
        if smoothing == "SMA"
            sma(source, length)
        else
            if smoothing == "EMA"
                ema(source, length)
            else
                wma(source, length)


catr = ma_function(tr(true), length)
atrVal = (catr * atrmultiplier)
// Calculate 30 Bar Vol Average
avgCnt = input(title="Number Of Bars Used For Averaging", type=input.integer, defval=30)
vol = security(syminfo.tickerid, timeframe.period, volume)
cvol = array.new_float(0)
for i = 0 to avgCnt-1
    array.push(cvol,vol[i])
    
currentAvgVol = array.avg(cvol)
currentResolutionPercentAvg = round((vol / currentAvgVol)*100,0)
pColor = color.white
if currentResolutionPercentAvg >= 200
    pColor := color.green
else
    if currentResolutionPercentAvg >= 100
        pColor := color.orange

codiff = 0.0
if currentResolutionPercentAvg >= 100
    codiff := 1

if codiff > 0 and enablePercentageOnChart
    label= label.new( bar_index, high, 
                      text=tostring(currentResolutionPercentAvg)+"%",  
                      color=color.white, 
                      textcolor= pColor,
                      size=size.small,
                      style =  label.style_none,
                      yloc = yloc.belowbar)

tblPos = input(title="Position on Chart", defval="Top Right", options=["Top Left", "Top Middle", "Top Right", "Bottom Left", "Bottom Center", "Bottom Right", "Middle Left", "Middle Right" ])
tblposition = tblPos == "Top Left" ? position.top_left : tblPos == "Top Right" ? position.top_right : tblPos == "Bottom Left" ? position.bottom_left : tblPos == "Bottom Right" ? position.bottom_right : tblPos == "Middle Left" ? position.middle_left : tblPos == "Bottom Center" ? position.bottom_center : tblPos == "Top Center" ? position.top_center : tblPos == "Middle Right" ? position.middle_right: position.top_center

tblBorderColor = input(title="Border Color", type=input.color, defval=#000000)
celllBgColor = input(title="Background Color", type=input.color, defval=#000000)
cellTextColor = input(title="Text Color", type=input.color, defval=#FFFFFF)



var resultsTable = table.new(position = tblposition, columns = 1, rows = 4, bgcolor = #ffffff, border_width = 1,frame_color = tblBorderColor, frame_width = 4)
table.clear(resultsTable, 0, 0)
table.cell(resultsTable, column=0, row=0, text="Relative Vol: "+tostring(currentResolutionPercentAvg,"")+"%", text_color=pColor, text_halign=text.align_right, text_valign=text.align_center, bgcolor=celllBgColor)
//table.cell(resultsTable, column=0, row=1, text="Current: "+tostring(vol,"###,###,###,###"), text_color=pColor, text_halign=text.align_right, text_valign=text.align_center, bgcolor=celllBgColor)
//table.cell(resultsTable, column=0, row=2, text=timeframe.period+" Avg: "+tostring(currentAvgVol,"###,###,###,###"), text_color=cellTextColor, text_halign=text.align_right, text_valign=text.align_center, bgcolor=celllBgColor)
table.cell(resultsTable, column=0, row=3, text="ATR: "+tostring(atrVal,"######.#######"), text_color=cellTextColor, text_halign=text.align_right, text_valign=text.align_center, bgcolor=celllBgColor)