// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© thetradingbot

//@version=5

// @description TODO: add library description here
library("TTB_Lib")


// This function is used to convert time frame input into a string that can be used in `request.security()` function.
export f_TFx(simple string _TF_input) =>
    if _TF_input == 'Chart'
        timeframe.period
    else if _TF_input == '1m'
        '1'
    else if _TF_input == '3m'
        '3'
    else if _TF_input == '5m'
        '5'
    else if _TF_input == '15m'
        '15'
    else if _TF_input == '30m'
        '30'
    else if _TF_input == '45m'
        '45'
    else if _TF_input == '1h'
        '60'
    else if _TF_input == '2h'
        '120'
    else if _TF_input == '3h'
        '180'
    else if _TF_input == '4h'
        '240'
    else if _TF_input == '6h'
        '360'
    else if _TF_input == '8h'
        '480'
    else if _TF_input == '12h'
        '720'
    else if _TF_input == 'D'
        'D'
    else if _TF_input == '3D'
        '3D'
    else if _TF_input == 'W'
        'W'
    else if _TF_input == '2W'
        '2W'
    else if _TF_input == '1M'
        '1M'
    else if _TF_input == '12M'
        '12M'

// // --------- This ensures that no plots from lower time frames will be plotted on higher time frames.
// This function is used to convert the current chart resolution into a float minutes value.
export f_resInMinutes() =>
    _resInMinutes = timeframe.multiplier * (timeframe.isseconds ? 1. / 60 : timeframe.isminutes ? 1. : timeframe.isdaily ? 60. * 24 : timeframe.isweekly ? 60. * 24 * 7 : timeframe.ismonthly ? 60. * 24 * 30.4375 : na)
    _resInMinutes

// This function is used to return the float minutes value of the string _res.
//export f_tfResInMinutes(simple string _res) =>
    // Dependency: f_resInMinutes().
//    request.security(syminfo.tickerid, _res, f_resInMinutes())


// TTB Key Levels
export f_getprice(TimeFrame, Index) =>
    i  = Index
    tf = TimeFrame
    [O, H, L, C, T] = request.security(syminfo.tickerid, tf, [open[i], high[i], low[i], close[i], time[i]], lookahead=barmerge.lookahead_on)
    [O, H, L, C, T]


	