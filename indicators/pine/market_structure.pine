// This script returns trailing stops on the occurrence of market structure (CHoCH/BOS labeling). Trailing stops are adjusted based on trailing maximums/minimums with the option for users to be able to control how quickly a trailing stop can converge toward the price.

// ðŸ”¶ SETTINGS

// Pivot Lookback: Pivot length used for the detection of swing points.
// Increment Factor %: Controls how fast trailing stops converge toward the price, with lower values returning slower converging trailing stops.
// Reset Stop On: Determines if trailing stops are reset on CHoCH structure or all (CHoCH + BOS).
// Show Structure: Determines if market structure is displayed.

// When a new structure (or only CHoCH if specified by the user) is detected, trailing stops will initially be set based on the maximum/minimum made on the previous trend. This will also set the trailing maximum/minimum to the current price value.

// If an uptrend is detected (most recent market structure is bullish) then the trailing stop will increase if the trailing maximum increase, the increment is calculated as:

// trailing stop = trailing stop + Increment Factor % of (trailing maximum - previous trailing maximum)

// If a downtrend is detected (most recent market structure is bearish) then the trailing stop will decrease if the trailing minimum decrease, the decrement is calculated as:

// trailing stop = trailing stop + Increment Factor % of (trailing minimum - previous trailing minimum)


// This work is licensed under a Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) https://creativecommons.org/licenses/by-nc-sa/4.0/
// Â© LuxAlgo

// Setting the version of Pine Script to 5
//@version=5
// Creating an indicator with the name "Market Structure Trailing Stop [LuxAlgo]" which overlays on the main chart and has a maximum line count of 500
indicator("Market Structure Trailing Stop [LuxAlgo]", overlay = true, max_lines_count = 500)
//------------------------------------------------------------------------------
// Defining the settings for the indicator
//-----------------------------------------------------------------------------{
// Pivot Lookback: Pivot length used for the detection of swing points.
length  = input(14, 'Pivot Lookback')
// Increment Factor %: Controls how fast trailing stops converge toward the price, with lower values returning slower converging trailing stops.
incr    = input.float(100, 'Increment Factor %', minval = 0)
// Reset Stop On: Determines if trailing stops are reset on CHoCH structure or all (CHoCH + BOS).
resetOn = input.string('CHoCH', 'Reset Stop On', options = ['CHoCH', 'All'])
// Show Structure: Determines if market structure is displayed.
showMS  = input(true, "Show Structures")

// Defining the style for the indicator
// Bullish MS: Color for bullish market structure
bullCss    = input(color.teal, 'Bullish MS'                           , group = 'Colors')
// Bearish MS: Color for bearish market structure
bearCss    = input(color.red, 'Bearish MS'                            , group = 'Colors')
// Retracement: Color for retracement
retCss     = input(#ff5d00, 'Retracement'                             , group = 'Colors')
// Area Transparency: Transparency level for the area between the price and the trailing stop
areaTransp = input.int(80, 'Area Transparency', minval = 0, maxval = 100, group = 'Colors')

//------------------------------------------------------------------------------
// Defining global variables for the indicator
//-----------------------------------------------------------------------------{
// ph_y and ph_x: Coordinates for pivot high
var float ph_y = na , var int ph_x = na
// pl_y and pl_x: Coordinates for pivot low
var float pl_y = na , var int pl_x = na
// top and btm: Top and bottom values for the trailing stop
var float top = na  , var float btm = na
// ph_cross and pl_cross: Flags to check if the price has crossed the pivot high or low
var ph_cross = false, var pl_cross = false

// max and min: Maximum and minimum values for the trailing stop
var float max = na
var float min = na
// ts: Trailing stop value
var float ts = na

// os: Market structure (1 for bullish, -1 for bearish)
var os = 0
// ms: Market structure (1 for CHoCH, -1 for BOS)
ms = 0

//------------------------------------------------------------------------------
// Detecting pivots and getting their coordinates
//-----------------------------------------------------------------------------{
// n: Current bar index
n = bar_index
// ph: Pivot high value
// The pivot high is calculated by the ta.pivothigh function. This function returns the highest high that preceded the current bar by a certain length. The length is defined by the user input.
ph = ta.pivothigh(length, length)
// pl: Pivot low value
// The pivot low is calculated by the ta.pivotlow function. This function returns the lowest low that preceded the current bar by a certain length. The length is defined by the user input.
pl = ta.pivotlow(length, length)

// If a pivot high is detected, set the pivot high coordinates and reset the pivot high cross flag
if ph 
    ph_y := ph
    ph_x := n - length
    ph_cross := false

// If a pivot low is detected, set the pivot low coordinates and reset the pivot low cross flag
if pl 
    pl_y := pl
    pl_x := n - length
    pl_cross := false

//-----------------------------------------------------------------------------}
// Detecting bullish market structures
//-----------------------------------------------------------------------------{
// If the close price is greater than the pivot high and the price has not crossed the pivot high
if close > ph_y and not ph_cross
    // If the user has chosen to reset the trailing stop on CHoCH, set the market structure to 1 if the previous market structure was bearish, otherwise set it to 0
    if resetOn == 'CHoCH'
        ms := os == -1 ? 1 : 0
    // If the user has chosen to reset the trailing stop on all structures, set the market structure to 1
    else
        ms := 1

    // Set the pivot high cross flag to true
    ph_cross := true

    // If the user has chosen to show market structures, draw a line at the pivot high
    if showMS
        line.new(ph_x, ph_y, n, ph_y
          , color = bullCss
          , style = os == -1 ? line.style_dashed : line.style_dotted)

    // Set the market structure to bullish
    os := 1

    // Search for the local minimum for the trailing stop
    btm := low
    for i = 0 to (n - ph_x)-1
        btm := math.min(low[i], btm)

//-----------------------------------------------------------------------------}
// Detecting bearish market structures
//-----------------------------------------------------------------------------{
// If the close price is less than the pivot low and the price has not crossed the pivot low
if close < pl_y and not pl_cross
    // If the user has chosen to reset the trailing stop on CHoCH, set the market structure to -1 if the previous market structure was bullish, otherwise set it to 0
    if resetOn == 'CHoCH'
        ms := os == 1 ? -1 : 0
    // If the user has chosen to reset the trailing stop on all structures, set the market structure to -1
    else
        ms := -1

    // Set the pivot low cross flag to true
    pl_cross := true

    // If the user has chosen to show market structures, draw a line at the pivot low
    if showMS
        line.new(pl_x, pl_y, n, pl_y
          , color = bearCss
          , style = os == 1 ? line.style_dashed : line.style_dotted)

    // Set the market structure to bearish
    os := -1

    // Search for the local maximum for the trailing stop
    top := high
    for i = 0 to (n - pl_x)-1
        top := math.max(high[i], top)

//-----------------------------------------------------------------------------}
// Trailing stop
//-----------------------------------------------------------------------------{
// Trailing max/min
// If the market structure is bullish, set the maximum to the close price
if ms == 1
    max := close
// If the market structure is bearish, set the minimum to the close price
else if ms == -1
    min := close
// If the market structure is not bullish or bearish, set the maximum to the higher of the close price and the previous maximum, and set the minimum to the lower of the close price and the previous minimum
else
    max := math.max(close, max)
    min := math.min(close, min)

// Trailing stop
// If the market structure is bullish, set the trailing stop to the local minimum
// If the market structure is bearish, set the trailing stop to the local maximum
// If the market structure is not bullish or bearish, adjust the trailing stop based on the change in the maximum or minimum and the increment
ts := ms == 1 ? btm
  : ms == -1 ? top
  : os == 1 ? ts + (max - max[1]) * incr / 100
  : ts + (min - min[1]) * incr / 100

//-----------------------------------------------------------------------------}
// Plots
//-----------------------------------------------------------------------------{
// Set the color of the trailing stop line based on the market structure
css = ms ? na 
  : os == 1 ? bullCss
  : bearCss

// Plot the close price and the trailing stop
plot_price = plot(close, editable = false, display = display.none)
plot_ts    = plot(ts, 'Trailing Stop', color = css)

// Set the color of the area between the close price and the trailing stop based on the market structure and the position of the close price relative to the trailing stop
css_area = (close - ts) * os < 0 ? retCss
  : css

// Fill the area between the close price and the trailing stop
fill(plot_price, plot_ts, color.new(css_area, areaTransp))

//-----------------------------------------------------------------------------}
